<tr>
    <td>@Favorite.Name</td>
    <td><a href="@Favorite.Uri" target="_blank">@Favorite.Uri</a></td>
    <td>
        <DxButton RenderStyle="@ButtonRenderStyle.Info" RenderStyleMode="@ButtonRenderStyleMode.Contained" Text="Edit" />
        <DxButton RenderStyle="@ButtonRenderStyle.Danger" RenderStyleMode="@ButtonRenderStyleMode.Contained"
                  Click="@OnDeleteClicked" Text="Delete" />
    </td>
</tr>

<DxPopup HeaderText="Delete Confirmation" @bind-Visible="@DeleteConfirmationVisible">
    <Content>
        <p>
            Are you sure you want to delete this favorite?
        </p>
    </Content>
    <FooterTemplate>
        <button class="btn btn-outline-secondary" @onclick="@(() => DeleteConfirmationVisible = false)">Cancel</button>
        <button class="btn btn-danger" @onclick="@OnDeleteConfirmed">Delete</button>
    </FooterTemplate>
</DxPopup>

@code{
    [Parameter]
    public Favorite Favorite { get; set; }

    [Parameter]
    public EventCallback<Guid> OnFavoriteDeleted { get; set; }

    public bool DeleteConfirmationVisible { get; set; }

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    protected void OnDeleteClicked(MouseEventArgs args)
    {
        DeleteConfirmationVisible = true;
    }

    protected async Task OnDeleteConfirmed()
    {
        DeleteConfirmationVisible = false;
        await OnFavoriteDeleted.InvokeAsync(Favorite.Id);
    }
}