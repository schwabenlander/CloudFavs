@inject HttpClient Http

<tr>
    <td>@Favorite.Name</td>
    <td><a href="@Favorite.Uri" target="_blank">@Favorite.Uri</a></td>
    <td>
        <DxButton RenderStyle="@ButtonRenderStyle.Info" RenderStyleMode="@ButtonRenderStyleMode.Contained"
                  Click="@OnEditClicked" Text="Edit" />

        <DxButton RenderStyle="@ButtonRenderStyle.Danger" RenderStyleMode="@ButtonRenderStyleMode.Contained"
                  Click="@OnDeleteClicked" Text="Delete" />
    </td>
</tr>

<DeleteFavoritePopup @ref="DeleteFavoritePopup" Favorite="Favorite" OnDeleteConfirmed="DeleteFavorite"></DeleteFavoritePopup>
<EditFavoritePopup @ref="EditFavoritePopup" Favorite="Favorite" OnEditSaved="UpdateFavorite"></EditFavoritePopup>

@code{
    [Parameter]
    public FavoriteDTO Favorite { get; set; }

    [Parameter]
    public EventCallback<Guid> OnFavoriteDeleted { get; set; }

    [Parameter]
    public EventCallback<Guid> OnFavoriteUpdated { get; set; }

    private EditFavoritePopup EditFavoritePopup { get; set; }
    private DeleteFavoritePopup DeleteFavoritePopup { get; set; }

    protected void OnDeleteClicked(MouseEventArgs args)
    {
        DeleteFavoritePopup.IsVisible = true;
    }

    protected async Task DeleteFavorite(Guid favoriteId)
    {
        Console.WriteLine($"[Deleting Favorite: {favoriteId.ToString()}]");
        await Http.DeleteAsync($"https://localhost:44373/api/favorite/{favoriteId}");
        await OnFavoriteDeleted.InvokeAsync(favoriteId);
    }

    protected void OnEditClicked(MouseEventArgs args)
    {
        EditFavoritePopup.IsVisible = true;
    }

    public async Task UpdateFavorite(Guid favoriteId)
    {
        Console.WriteLine($"[Getting Favorite: {favoriteId.ToString()}]");
        //Favorite = await Http.GetFromJsonAsync<FavoriteDTO>($"https://localhost:44373/api/favorite/{favoriteId}");
        await OnFavoriteUpdated.InvokeAsync(favoriteId);
    }
}