@page "/favorites"
@inject HttpClient Http

<h1>Favorites List</h1>

@if (favorites == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>URI</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var favorite in favorites)
            {
                <FavoriteRow @key="favorite" Favorite="favorite" OnFavoriteDeleted="DeleteFavorite"></FavoriteRow>
            }
        </tbody>
    </table>
}

@code {
    private List<FavoriteDTO> favorites = new List<FavoriteDTO>();

    protected override async Task OnInitializedAsync()
    {
        await GetFavorites();
    }

    protected async Task GetFavorites()
    {
        Console.WriteLine("Getting favorites");
        favorites = await Http.GetFromJsonAsync<List<FavoriteDTO>>("https://localhost:44373/api/favorite/all/66a5db8a-47f7-48a5-98f8-80b34452bf34");
    }

    protected async Task DeleteFavorite(Guid favoriteId)
    {
        Console.WriteLine($"Deleting favorite: {favoriteId}");
        await Http.DeleteAsync($"https://localhost:44373/api/favorite/{favoriteId}");
        await GetFavorites();
    }

    protected void OnNewFavoriteAdded()
    {
        //InvokeAsync(StateHasChanged);
    }
}
